name: Validate and Deploy Kubernetes YAML

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  # =========================
  # JOB 1: VALIDASI YAML
  # =========================
  validate:
    name: Validate Kubernetes YAML
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install kubeconform (for schema validation)
        run: |
          wget -q https://github.com/yannh/kubeconform/releases/latest/download/kubeconform-linux-amd64.tar.gz
          tar xf kubeconform-linux-amd64.tar.gz
          sudo mv kubeconform /usr/local/bin/

      - name: Validate YAML syntax (kubectl dry-run)
        run: |
          kubectl apply --dry-run=client -f .
          echo "✅ All YAML syntaxes are valid."

      - name: Validate Kubernetes schema (kubeconform)
        run: |
          kubeconform -strict -ignore-missing-schemas -summary *.yaml
          echo "✅ Schema validation passed."

  # =========================
  # JOB 2: DEPLOY TO CLUSTER
  # =========================
  deploy:
    name: Deploy to Kubernetes Cluster
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: "v1.30.0"

      - name: Setup kubeconfig
        run: |
          if [ -z "${{ secrets.KUBE_CONFIG }}" ]; then
            echo "❌ ERROR: KUBE_CONFIG secret is empty!"
            exit 1
          fi

          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
          echo "✅ kubeconfig created successfully"

      - name: Verify cluster access
        run: |
          kubectl version --short
          kubectl cluster-info || {
            echo "❌ Failed to connect to cluster."
            exit 1
          }

      - name: Deploy manifests
        run: |
          echo "🚀 Deploying manifests to cluster..."
          kubectl apply -f .
          echo "✅ Deployment complete."

      - name: List deployed CronJobs
        run: |
          kubectl get cronjobs -A
